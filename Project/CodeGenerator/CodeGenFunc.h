#pragma once

namespace PresetStr
{
	constexpr const std::string_view ScriptProjPath = "./Project/Script";

#ifdef _DEBUG
	constexpr const std::string_view ContentPath = "./OutputFile/Bin_Debug/Content";
#else
	constexpr const std::string_view ContentPath = "./OutputFile/Bin_Release/Content";
#endif

	constexpr const std::string_view NameSpace = "namespace ";
	constexpr const std::string_view ConstexprStringView = "std::string_view ";
	constexpr const std::string_view EqualDoubleQuotation = " = \"";

	constexpr const std::string_view Head = R"(
#pragma once

#include <string_view>

//This Code is Automatically generated by CodeGenerator.exe

)";
}



void CreateScriptCode();

//쉐이더는 좀 특수한 경우(json 파일을 통해서 쉐이더 코드파일 여러개를 로드)이므로 따로 분리하였음.
void CreateShaderCode();

//_PathFromContent : Content 폴더로부터의 경로
//ex) 텍스처 폴더를 순회돌면서 파일명을 추가하고 싶을 경우 "Texture"만 넣어주면 됨.
//_HeaderFileName : 헤더 파일의 이름만 작성
//_vecExtension : 가져올 확장자 종류
void CreateStrKey(const std::filesystem::path& _PathFromContent, const std::filesystem::path& _HeaderFilename, const vector<string>& _vecExtension);


