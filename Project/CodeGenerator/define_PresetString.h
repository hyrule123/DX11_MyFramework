#pragma once

#define PRESET constexpr inline const char*

namespace define_Preset
{
	namespace Path
	{
		PRESET ScriptProj = "./Project/Script";
		PRESET EngineProj = "./Project/Engine";

#ifdef _DEBUG
		PRESET Content = "./OutputFile/Bin_Debug/Content";
#else
		PRESET Content = "./OutputFile/Bin_Release/Content";
#endif

		PRESET strKey_Script = "strKey_Script.h";
		PRESET strKey_Shader = "strKey_Shader.h";
		PRESET strKey_Texture = "strKey_Texture.h";
		PRESET strKey_Prefab = "strKey_Prefab.h";
	}

	namespace Keyword
	{
		PRESET IncludeBeginA = "#include \"";
		constexpr inline const wchar_t* IncludeBeginW = L"#include \"";

		PRESET NameSpace = "namespace ";
		PRESET ConstexprInlineConstChar = "PRESET ";
		PRESET EqualDoubleQuotation = " = \"";
		PRESET EnumClass = "enum class ";
		PRESET strKey = "strKey_";

		PRESET Head = R"(
#pragma once

#include <Engine/define.h>

//=========================================================
//This Code is Automatically generated by CodeGenerator.exe
//=========================================================

)";
	}

	namespace Regex_Keyword
	{
		//[   numthreads   ( %d, %d, %d )   ]
		//[ ] 안에 둘러싸여 있고, 공백 갯수에 상관없이 숫자 3개를 추출
		PRESET Numthread = R"(\[\s*numthreads\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\).*\])";
	}


}










